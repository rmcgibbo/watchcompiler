#!/usr/bin/env python
"""
Watch a directory for the creation or modification of files with a given
extension, and then run the first line of any such file as a command line
executable. This can be used to trigger compilation of kernels for OpenMM
on cray compute nodes.
"""
from os.path import split, splitext, join, exists, isfile
import glob
import sys
import time
import argparse
import subprocess
from itertools import ifilter

def compile(src_path):
    if not isfile(src_path):
        return

    with open(src_path) as f:
        command = f.readline().strip()

    # strip any leading comments on the command
    command = command.lstrip('#/ ')

    print src_path, ":",  command
    subprocess.check_output(command, shell=True)
    print 'Success!'


def main():
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument('--path', default='.', help='path to the directory to watch. default="."')
    parser.add_argument('--inext', default='.cu', help='file extension to watch. default=".cu"')
    parser.add_argument('--outext', default='.ptx', help='output file extension. default=".ptx"')

    args = parser.parse_args()

    print '{exe} looking in {path} for things ending in {ext}'.format(exe=split(sys.argv[0]),
                                                                      path=args.path,
                                                                      ext=args.inext)
    infile = join(args.path, '*' + args.inext)
    outfile = lambda inf : splitext(inf)[0] + args.outext

    while True:
        fns = filter(lambda infile: not exists(outfile(infile)), glob.iglob(infile))
        for fn in fns:
            compile(fn)

        time.sleep(1)


if __name__ == "__main__":
    main()
